Description: update for @jridgewell/gen-mapping 0.2.0
Author: Yadd <yadd@debian.org>
Forwarded: no
Last-Update: 2022-04-29

--- a/src/source-map.ts
+++ b/src/source-map.ts
@@ -1,4 +1,4 @@
-import { decodedMap, encodedMap } from '@jridgewell/gen-mapping';
+import { toDecodedMap, toEncodedMap } from '@jridgewell/gen-mapping';
 
 import type { GenMapping } from '@jridgewell/gen-mapping';
 import type { DecodedSourceMap, EncodedSourceMap, Options } from './types';
@@ -17,7 +17,7 @@
   declare version: 3;
 
   constructor(map: GenMapping, options: Options) {
-    const out = options.decodedMappings ? decodedMap(map) : encodedMap(map);
+    const out = options.decodedMappings ? toDecodedMap(map) : toEncodedMap(map);
     this.version = out.version; // SourceMap spec says this should be first.
     this.file = out.file;
     this.mappings = out.mappings as SourceMap['mappings'];
--- a/test/unit/source-map-tree.ts
+++ b/test/unit/source-map-tree.ts
@@ -1,4 +1,4 @@
-import { decodedMap } from '@jridgewell/gen-mapping';
+import { toDecodedMap } from '@jridgewell/gen-mapping';
 import { TraceMap } from '@jridgewell/trace-mapping';
 
 import {
@@ -44,7 +44,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 1, 1], [5]]]);
     });
 
@@ -60,7 +60,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 1, 1], [5]]]);
     });
 
@@ -74,7 +74,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([]);
     });
 
@@ -91,7 +91,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 0, 0, 0]]]);
       expect(traced).toMatchObject({
         names: [name],
@@ -108,7 +108,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 1, 1]]]);
     });
 
@@ -122,7 +122,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 0, 0, 0]]]);
       expect(traced).toMatchObject({
         names: ['child'],
@@ -142,7 +142,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced).toMatchObject(extras);
     });
 
@@ -153,7 +153,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced).toMatchObject({
         // TODO: support sourceRoot
         sourceRoot: undefined,
@@ -169,7 +169,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([[[0, 0, 0, 0]]]);
     });
 
@@ -181,7 +181,7 @@
       };
 
       const tree = MapSource(new TraceMap(map), [child]);
-      const traced = decodedMap(traceMappings(tree));
+      const traced = toDecodedMap(traceMappings(tree));
       expect(traced.mappings).toEqual([]);
     });
 
@@ -198,7 +198,7 @@
         };
 
         const tree = MapSource(new TraceMap(map), [child]);
-        const traced = decodedMap(traceMappings(tree));
+        const traced = toDecodedMap(traceMappings(tree));
         expect(traced.mappings).toEqual([[[0, 0, 0, 0]]]);
       });
 
@@ -209,7 +209,7 @@
         };
 
         const tree = MapSource(new TraceMap(map), [child]);
-        const traced = decodedMap(traceMappings(tree));
+        const traced = toDecodedMap(traceMappings(tree));
         expect(traced.mappings).toEqual([[[0, 0, 0, 0]], [[0, 0, 0, 0]]]);
       });
     });
